Problem Statement:
Our mall management faces a challenge in understanding visitor behavior, particularly identifying customers who visit the mall without making any transactions. Currently, we maintain two tables: "Visits," which records visit IDs and customer IDs, and "Transactions," which logs transaction IDs, visit IDs, and transaction amounts. However, there's no streamlined process to identify customers who visit without making transactions and analyze the frequency of such visits.

Table: Visits

+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| visit_id    | int     |
| customer_id | int     |
+-------------+---------+
visit_id is the column with unique values for this table.
This table contains information about the customers who visited the mall.
 

Table: Transactions

+----------------+---------+
| Column Name    | Type    |
+----------------+---------+
| transaction_id | int     |
| visit_id       | int     |
| amount         | int     |
+----------------+---------+
transaction_id is column with unique values for this table.
This table contains information about the transactions made during the visit_id.
 

Write a solution to find the IDs of the users who visited without making any transactions and the number of times they made these types of visits.

Return the result table sorted in any order.

Solution:

SELECT customer_id, COUNT(*) As count_no_trans
FROM Visits v
LEFT JOIN Transactions t 
ON v.visit_id = t.visit_id
WHERE t.visit_id IS NULL
GROUP BY customer_id
